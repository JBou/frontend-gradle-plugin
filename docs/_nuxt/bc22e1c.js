(window.webpackJsonp=window.webpackJsonp||[]).push([[72,10,11,12,14,18,24,64],{212:function(t,e,n){"use strict";n.r(e);var o=n(0),r=n(214),l=o.a.component("fgp-task",{components:{fgpTaskLinkAnchor:r.default},props:{name:{type:String,required:!0},type:{type:Boolean,default:!1}}}),d=n(4),component=Object(d.a)(l,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("article",{staticClass:"mb-3 border-bottom"},[n("header",[n("h4",[n("fgp-task-link-anchor",{attrs:{name:t.name}}),t._v(" "),t.type?[t._v("Type")]:[t._v("Task")],t._v(" "),n("fgp-code",[t._v("\n                "+t._s(t.name)+"\n            ")]),t._v("\n            -\n            "),t._t("title"),t._v(" "),n("fgp-site-link",{staticClass:"small text-info",attrs:{path:"#app"}},[t._v("â†‘")])],2)]),t._v(" "),n("section",{staticClass:"px-3"},[t._t("description")],2)])}),[],!1,null,null,null);e.default=component.exports;installComponents(component,{Header:n(72).default})},213:function(t,e,n){"use strict";n.r(e);var o=n(0).a.component("fgp-info",{}),r=n(4),component=Object(r.a)(o,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("p",{staticClass:"text-info px-2"},[n("i",{staticClass:"fas fa-info-circle mr-1"}),t._t("default")],2)}),[],!1,null,null,null);e.default=component.exports},214:function(t,e,n){"use strict";n.r(e);var o=n(0).a.component("fgp-task-link-anchor",{props:{name:{type:String,required:!0}}}),r=n(4),component=Object(r.a)(o,(function(){var t=this,e=t.$createElement;return(t._self._c||e)("span",{staticClass:"text-info",attrs:{id:t.name}},[t._v("#")])}),[],!1,null,null,null);e.default=component.exports},217:function(t,e,n){"use strict";n.r(e);var o=n(0).a.component("fgp-nodejs-link",{}),r=n(4),component=Object(r.a)(o,(function(){var t=this,e=t.$createElement;return(t._self._c||e)("fgp-link",{attrs:{href:"https://nodejs.org/"}},[t._v(t._s(t.$t("navigation.nodejs.label")))])}),[],!1,null,null,null);e.default=component.exports},219:function(t,e,n){"use strict";n.r(e);var o=n(0),r=n(54),l=o.a.component("fgp-gradle-docs-link",{components:{fgpLink:r.default},props:{path:{type:String,default:null}}}),d=n(4),component=Object(d.a)(l,(function(){var t=this,e=t.$createElement;return(t._self._c||e)("fgp-link",{attrs:{href:"https://docs.gradle.org"+t.path}},[t._t("default")],2)}),[],!1,null,null,null);e.default=component.exports},220:function(t,e,n){"use strict";n.r(e);var o=n(0),r=n(219),l=o.a.component("fgp-gradle-task-outcome-link",{components:{fgpGradleDocsLink:r.default},props:{outcome:{type:String,required:!0}}}),d=n(4),component=Object(d.a)(l,(function(){var t=this,e=t.$createElement;return(t._self._c||e)("fgp-gradle-docs-link",{attrs:{path:"/current/userguide/more_about_tasks.html#sec:task_outcomes"}},[t._v(t._s(t.outcome))])}),[],!1,null,null,null);e.default=component.exports},227:function(t,e,n){"use strict";n.r(e);var o=n(0),r=n(54),l=o.a.component("fgp-gradle-guides-link",{components:{fgpLink:r.default},props:{path:{type:String,default:null}}}),d=n(4),component=Object(d.a)(l,(function(){var t=this,e=t.$createElement;return(t._self._c||e)("fgp-link",{attrs:{href:"https://guides.gradle.org"+t.path}},[t._t("default")],2)}),[],!1,null,null,null);e.default=component.exports},277:function(t,e,n){"use strict";n.r(e);var o=n(0),r=n(227),l=n(220),d=n(213),f=n(217),c=n(212),h=o.a.component("fgp-install-node-task",{components:{fgpGradleGuidesLink:r.default,fgpGradleTaskOutcomeLink:l.default,fgpInfo:d.default,fgpNodejsLink:f.default,fgpTask:c.default}}),v=n(4),component=Object(v.a)(h,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("fgp-task",{attrs:{name:"installNode"},scopedSlots:t._u([{key:"title",fn:function(){return[t._v("Install "),n("fgp-nodejs-link")]},proxy:!0},{key:"description",fn:function(){return[n("p",[t._v("\n            The task downloads a "),n("fgp-nodejs-link"),t._v(" distribution, verifies its integrity, and installs it in the\n            directory pointed by the "),n("fgp-property-link",{attrs:{name:"nodeInstallDirectory"}}),t._v(" property. The URL used to\n            download the distribution is resolved using the\n            "),n("fgp-property-link",{attrs:{name:"nodeDistributionUrlRoot"}}),t._v(" property and the\n            "),n("fgp-property-link",{attrs:{name:"nodeDistributionUrlPathPattern"}}),t._v(" property. Checking the distribution\n            integrity consists of downloading a file providing the distribution shasum. This file is expected to be\n            in the same remote web directory than the distribution. For example, if the distribution is located at\n            "),n("fgp-code",[t._v("https://nodejs.org/dist/vX.Y.Z/node-vX.Y.Z-win-x64.zip")]),t._v(", the plugin attempts to\n            download the shasum file located at "),n("fgp-code",[t._v("https://nodejs.org/dist/vX.Y.Z/SHASUMS256.txt")]),t._v(".\n            By default, the plugin relies on the VM\n            "),n("fgp-java-network-properties-link",[t._v("network properties")]),t._v(" to know if a\n            proxy server shall be used when downloading the distribution and the shasum. A custom proxy server may\n            also be used by defining the "),n("fgp-property-link",{attrs:{name:"httpsProxyHost"}}),t._v(" property (respectively the\n            "),n("fgp-property-link",{attrs:{name:"httpProxyHost"}}),t._v(" property) if the\n            "),n("fgp-property-link",{attrs:{name:"nodeDistributionUrlRoot"}}),t._v(" property uses the "),n("fgp-code",[t._v("https")]),t._v("\n            protocol (resp. uses the "),n("fgp-code",[t._v("http")]),t._v(" protocol).\n        ")],1),t._v(" "),n("p",[t._v("\n            If a "),n("fgp-nodejs-link"),t._v(" distribution is already installed in the local platform - either as a global\n            installation or as an installation performed by another Gradle (sub-)project - and shall be used instead\n            of a downloaded distribution, take a look at the\n            "),n("fgp-property-link",{attrs:{name:"nodeDistributionProvided"}}),t._v(" property instead: when "),n("fgp-code",[t._v("true")]),t._v(",\n            this task is ignored if invoked during a Gradle build, and its outcome will always be\n            "),n("fgp-gradle-task-outcome-link",{attrs:{outcome:"SKIPPED"}}),t._v(".\n        ")],1),t._v(" "),n("p",[t._v("\n            The task takes advantage of\n            "),n("fgp-gradle-guides-link",{attrs:{path:"/performance/#incremental_build"}},[t._v("Gradle incremental build")]),t._v(", and is not executed again unless one of its inputs/outputs changed. Consequently, if the task takes\n            part of a Gradle build, its outcome will be "),n("fgp-gradle-task-outcome-link",{attrs:{outcome:"UP-TO-DATE"}}),t._v(".\n        ")],1),t._v(" "),n("fgp-info",[t._v("\n            This task should not be executed directly. Gradle executes it if the build requires it.\n        ")])]},proxy:!0}])})}),[],!1,null,null,null);e.default=component.exports}}]);