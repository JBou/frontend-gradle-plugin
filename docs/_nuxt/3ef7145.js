(window.webpackJsonp=window.webpackJsonp||[]).push([[54,28],{308:function(e,t,n){"use strict";n.r(t);n(113),n(31);var r=n(0),code=n(112),o=n(140),l=n(85),d=r.a.component("fgp-property-link",{components:{fgpCode:code.default,fgpSiteLink:o.default},mixins:[l.a],props:{name:{type:String,required:!0}}}),f=n(13),component=Object(f.a)(d,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-site-link",{attrs:{path:"".concat(e.fgp.paths.configuration,"#").concat(e.name)}},[e.$slots.default?[e._t("default")]:t("fgp-code",[e._v(e._s(e.name))])],2)}),[],!1,null,null,null);t.default=component.exports},362:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(309),l=n(308),d=r.a.component("fgp-node-install-directory-property",{components:{fgpCode:code.default,fgpProperty:o.default,fgpPropertyLink:l.default}}),f=n(13),component=Object(f.a)(d,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-property",{attrs:{name:"nodeInstallDirectory",type:"java.io.File",required:!1,"default-value":"${projectDir}/node",tasks:["installNode","resolvePackageManager","installPackageManager","installFrontend","cleanFrontend","assembleFrontend","checkFrontend","publishFrontend"]}},[t("p",[e._v("\n        Directory where the "),t("fgp-nodejs-link"),e._v(" distribution shall be installed or is already installed (depending\n        on the value of property "),t("fgp-property-link",{attrs:{name:"nodeDistributionProvided"}}),e._v("). Despite its default\n        "),t("fgp-code",[e._v("null")]),e._v(" value, when property "),t("fgp-property-link",{attrs:{name:"nodeDistributionProvided"}}),e._v(" is\n        "),t("fgp-code",[e._v("false")]),e._v(" or the "),t("fgp-code",[e._v("FGP_NODEJS_HOME")]),e._v(" environment variable is undefined,\n        the distribution is installed or expected to be found in directory "),t("fgp-code",[e._v("${projectDir}/node")]),e._v(".\n    ")],1)])}),[],!1,null,null,null);t.default=component.exports}}]);